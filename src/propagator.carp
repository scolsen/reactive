(use Cell)
(use Array)
(load-and-use "Macros.carp")

(defmodule Propagator

  ;;; Propagator :: (Fn [a] t)

  (hidden defpropagator-internal)
  (private defpropagator-internal)
  (doc defpropagator-internal "Add a propagator to an array of cells. The
  propagator is scheduled After it has been added to each cell")
  ;; should we return the cell here?
  (sig defpropagator-internal (Fn [(Array (Cell a t))] ()))
  (defn defpropagator-internal [cells propagator] 
    (do 
      (foreach [cell cells]
        (add-propagator cell propagator))
      (Scheduler.schedule propagator))) 

  (defmacro defpropagator [name f]
    (defmacro name [:rest cells]
      (list 'fn (array)
        (list 'let-do (array 'output (last cells)
                             'inputs (all-but-last cells))
        (list 'defpropagator-internal 'inputs
          (list 'fn (array) 
            (list 'add-content 'output 
              (build-vararg f (list 'endo-map 'Cell.content 'inputs)))))))))
)
